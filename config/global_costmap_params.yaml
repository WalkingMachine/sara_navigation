    # Coordinate frame and tf parameters
global_frame: map
    # The global frame for the costmap to operate in.
robot_base_frame: base_link
    # The name of the frame for the base link of the robot.
    # transform_tolerance: 0.2
    # Specifies the delay in transform (tf) data that is tolerable in seconds. This parameter serves as a safeguard to losing a link in the tf tree while still allowing an amount of latency the user is       comfortable with to exist in the system. For example, a transform being 0.2 seconds out-of-date may be tolerable, but a transform being 8 seconds out of date is not. If the tf transform between the coordinate frames specified by the global_frame and robot_base_frame parameters is transform_tolerance seconds older than ros::Time::now(), then the navigation stack will stop the robot.
    # Rate parameters
update_frequency: 1.0
    # The frequency in Hz for the map to be updated.
    # publish_frequency: 2.0
    # The frequency in Hz for the map to be publish display information.
    # Map management parameters
rolling_window: false
static_map: true
    # Whether or not to use a rolling window version of the costmap. If the static_map parameter is set to true, this parameter must be set to false.
always_send_full_costmap: false
    # If true the full costmap is published to "~<name>/grid" every update. If false only the part of the costmap that has changed is published on the "~<name>/grid_updates" topic.
    # width: 2.0
    # The width of the map in meters.
    # height: 2.0
    # The height of the map in meters.
    # resolution: 0.05
    # The resolution of the map in meters/cell.
plugins:
    # Sequence of plugin specifications, one per layer. Each specification is a dictionary with name and type fields. The name is used to define the parameter namespace for the plugin. See the tutorials for examples.

    - {name: static_map,          type: "costmap_2d::StaticLayer"}
    - {name: laser_observation,   type: "costmap_2d::ObstacleLayer"}
    - {name: camera_observation,  type: "costmap_2d::ObstacleLayer"}
    - {name: inflation_layer,     type: "costmap_2d::InflationLayer"}


laser_observation:
    observation_sources: base_scan
    base_scan:
        data_type: LaserScan
        #sensor_frame: /front_hokuyo_link
        topic: /scan
        clearing: true
        marking: true

camera_observation:
    observation_sources: base_scan head_xtion
    head_xtion:
        data_type: PointCloud2
        observation_persistence: 0.5
        #sensor_frame: head_xtion_rgb_optical_frame
        topic: /head_xtion/depth/points
        raytrace_range: 2.0
        obstacle_range: 1.5
        min_obstacle_height: -0.05
        max_obstacle_height: 1.5
        clearing: true
        marking: true
        combination_method: 99

    base_scan:
        data_type: LaserScan
        #sensor_frame: /front_hokuyo_link
        topic: /scan
        clearing: true
        marking: false


inflation_layer:
    cost_scaling_factor: 30
    inflation_radius: 1
    clearing: true
    marking: true

footprint: [[0.40, -0.3], [0.45, -0.1], [0.35, 0.28], [-0.32, 0.26], [-0.32, -0.26]]
footprint_padding: 0.0
